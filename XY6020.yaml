substitutions:
  tx_pin: "GPIO4"
  rx_pin: "GPIO2"
  
esphome:
  name: xy6020
  #friendly_name: xy6020l
  comment: "Monitor and control a xy6020 Digital Control Power Supply via UART-TTL"

#        Entsprechend die Daten Anpassen von dem zu verwendenden ESP 
esp32:
  board: nodemcu-32s

#              falls keine Weboberfläche vom ESP benötigt wird, auskommentiert lassen
#web_server:
#  port: 9005

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  #manual_ip:
  #  static_ip: !secret xy6020_IP
  #  gateway: !secret gateway
  #  subnet: !secret subnet
  
  #ap:
  #  ssid: "xy6020 Fallback Hotspot"
  #  password: "UEikMwV1wqU8"


#       falls kein MQTT Broker verwendet wird auskommentiert lassen.
#  ! Warning     !!!!!!!!!!!!!!!!
#    If you enable MQTT and you do not use the “native API” for Home Assistant,
#    you must remove the api: line from your ESPHome configuration, otherwise the ESP will
#    reboot every 15 minutes because no client connected to the native API.
#mqtt:
#  broker: !secret mqtt_IP
#  port: 8883
#  username: !secret mqtt_user
#  password: !secret mqtt_password

ota:
  password: !secret xyota

api:
  encryption:
    key: !secret xykey

uart:
  - id: uart_bus1
    tx_pin: ${tx_pin}
    rx_pin: ${rx_pin}
    baud_rate: 115200
    stop_bits: 1
    parity: NONE
    debug:
      direction: BOTH
      dummy_receiver: true

modbus:
  send_wait_time: 1s
  uart_id: uart_bus1
  id: mod_bus

modbus_controller:
  - id: sdm
    address: 1
    modbus_id: mod_bus
    #command_throttle: 0ms
    setup_priority: -10
    update_interval: 10s
    
captive_portal:

logger:
  level: DEBUG
  
sensor:
  - platform: modbus_controller
    name: "Eingestellte Spannung"
    address: 0x00
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "V"
    icon: "mdi:water-percent"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01
     
  - platform: modbus_controller
    name: "Eingestellter Strom"
    address: 0x01
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Ampere"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01
  
  - platform: modbus_controller
    name: "Spannung am Ausgang"
    address: 0x02
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "Aktueller Strom"
    address: 0x03
    register_type: "holding"
    value_type: U_WORD
    device_class: CURRENT
    #unit_of_measurement: "Ampere"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "Leistung am Ausgang"
    address: 0x04
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Watt"
    accuracy_decimals: 2
    filters:
     - multiply: 0.1

  - platform: modbus_controller
    name: "Eingangsspannung"
    address: 0x05
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Volt"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "Output AH low 16 bits"
    address: 0x06
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "mAH"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "Output AH high 16 bits"
    address: 0x07
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "mAH"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "Output WH low 16 bits"
    address: 0x08
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "mWH"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "Output WH low 16 bits"
    address: 0x09
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "mWH"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01
  
  - platform: modbus_controller
    name: "Open Time Hours"
    address: 0x0A
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Hours"
    accuracy_decimals: 0
    filters:
     - multiply: 1

  - platform: modbus_controller
    name: "Open Time Minutes"
    address: 0x0B
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Minutes"
    accuracy_decimals: 0
    filters:
     - multiply: 1

  - platform: modbus_controller
    name: "Open Time Seconds"
    address: 0x0C
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Seconds"
    accuracy_decimals: 0
    filters:
     - multiply: 1
  
  - platform: modbus_controller
    name: "interne Temperatur"
    id: internal_temp
    address: 0x0D
    register_type: "holding"
    value_type: U_WORD
    device_class: "TEMPERATURE"
    unit_of_measurement: "°C"
    icon: "mdi:thermometer"
    accuracy_decimals: 2
    filters:
     - multiply: 0.1

  - platform: modbus_controller
    name: "externe Temperatur"
    address: 0x0E
    register_type: "holding"
    value_type: U_WORD
    device_class: "TEMPERATURE"
    unit_of_measurement: "°C"
    icon: "mdi:thermometer"
    accuracy_decimals: 2
    filters:
     - multiply: 0.1

# Output over Text_Sensor  !!!!!!!!
#id: protect_state
#address: 0x10
#register_type: "holding"
#value_type: U_WORD

# CV/CC state over Text_Sensor    
#name: "CV / CC"
#address: 0x11
#register_type: "holding"
#value_type: U_WORD

# Switch state over Text_Sensor    
#name: "Power Switch On-Off"
#address: 0x12
#register_type: "holding"
#value_type: U_WORD

  - platform: modbus_controller
    name: "Model"
    address: 0x16
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Model"
    accuracy_decimals: 0
    filters:
     - multiply: 1
  
  - platform: modbus_controller
    name: "Version"
    address: 0x17
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Version"
    accuracy_decimals: 0
    filters:
     - multiply: 1
  
  - platform: modbus_controller
    name: "M050"
    address: 0x50
    force_new_range: true
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "M051 Current Setting"
    address: 0x51
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "M052 Low Voltage Protected"
    address: 0x52
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "M053 Over Voltage Protected"
    address: 0x53
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01
     
  - platform: modbus_controller
    name: "M054 Over Current Protect"
    address: 0x54
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "A"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "M055 Over Power Protected"
    address: 0x55
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "W"
    accuracy_decimals: 1
    filters:
     - multiply: 1.0

  - platform: modbus_controller
    name: "Maximum Output Time Hours"
    address: 0x56
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Hours"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "M57"
    address: 0x57
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "M058"
    address: 0x58
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "M059"
    address: 0x59
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "V"
    accuracy_decimals: 2
    filters:
     - multiply: 0.01

  - platform: modbus_controller
    name: "Set Over Temreture Protected"
    address: 0x5C
    register_type: "holding"
    value_type: U_WORD
    unit_of_measurement: "Celsius"
    accuracy_decimals: 2
    filters:
     - multiply: 1.0

text_sensor:
  - platform: modbus_controller
    modbus_controller_id: sdm
    name: baudrate
    id: baudrate_status
    register_type: holding
    address: 0x19
    #register_count: 0
    raw_encode: HEXBYTES
    filters:
      lambda: |-
        if(x == "0000") {
          return {"?"};
        } else if(x == "0001") {
          return {"?"};
        } else if(x == "0002") {
          return {"?"};
        } else if(x == "0003") {
          return {"?"};
        } else if(x == "0004") {
          return {"?"};
        } else if(x == "0005") {
          return {"?"};
        } else if(x == "0006") {
          return {"115200"};  
        } else {
          return {"Error"};
        }
        
  - platform: modbus_controller
    modbus_controller_id: sdm
    name: "Power ON OFF"
    register_type: holding
    address: 0x12
    bitmask: 1
    raw_encode: HEXBYTES
    filters:
      lambda: |-
        if(x == "0000") {
          return {"OFF"};  
        } else if(x == "0001") {
          return {"ON"};
        } else {
          return {"Error"};
        }

  - platform: modbus_controller
    modbus_controller_id: sdm
    name: "CV / CC"
    register_type: holding
    address: 0x11
    bitmask: 1
    raw_encode: HEXBYTES
    filters:
      lambda: |-
        if(x == "0000") {
          return {"CV"};  
        } else if(x == "0001") {
          return {"CC"};
        } else {
          return {"Error"};
        }      

  - platform: modbus_controller
    modbus_controller_id: sdm
    name: Key Lock Switch
    register_type: holding
    address: 0x0F
    bitmask: 1
    raw_encode: HEXBYTES
    filters:
      lambda: |-
        if(x == "00000000") {
          return {"unlock"};  
        } else if(x == "00010000") {
          return {"locked"};
        } else {
          return {"Error"};
        }

  - platform: modbus_controller
    modbus_controller_id: sdm
    name: Protect Status
    register_type: holding
    address: 0x10
    raw_encode: HEXBYTES
    filters:
      lambda: |-
        if (x == "0000") {
          return {"Normal"};  
        } else if(x == "0001") {
          return {"Over Voltage Protected"};
        } else if(x == "0002") {
          return {"Over Current Protected"};
        } else if(x == "0003") {
          return {"Over Power Protected"};
        } else if(x == "0004") {
          return {"LVP"};
        } else if(x == "0005") {
          return {"OAH"};  
        } else if(x == "0006") {
          return {"OHP"};
        } else if(x == "0007") {
          return {"Over Tempreture Protected"};
        } else if(x == "0008") {
          return {"OEP"};
        } else if(x == "0009") {
          return {"OWH"};
        } else if(x == "0010") {
          return {"ICP"};
        } else {
          return {"Error"};
        }

switch:
   - platform: modbus_controller
     modbus_controller_id: sdm
     name: "Tastensperre"
     id: keylock
     register_type: holding
     address: 0x0F
     bitmask: 1
     entity_category: config
     icon: "mdi:toggle-switch"

   - platform: modbus_controller
     modbus_controller_id: sdm
     name: "EIN-AUS Schalter"
     id: onoff
     register_type: holding
     address: 0x12
     bitmask: 1
     entity_category: config
     icon: "mdi:toggle-switch"  
     
   - platform: modbus_controller
     modbus_controller_id: sdm
     name: "Sleep"
     register_type: holding
     address: 0x15
     bitmask: 1
     entity_category: config
     icon: "mdi:toggle-switch"
     
packages:
  remote_package:
    url: https://github.com/creepystefan/esphome-XY6020
    refresh: 0d
    files: [
      yml/numbers.yaml,
       ]



